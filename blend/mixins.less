// Note (il): Mixins come first, so should have no deps on other variables (colors, etc)

.box-shadow-both(@innerArgs, @outerArgs) {
  -webkit-box-shadow: @innerArgs, @outerArgs;
  -moz-box-shadow: @innerArgs, @outerArgs;
  box-shadow: @innerArgs, @outerArgs;
}

.align-items(@a) {
  -webkit-align-items: @a;
  -moz-align-items: @a;
  align-items: @a;
}

.align-self(@a) {
  -webkit-align-self: @a;
  -moz-align-self: @a;
  align-self: @a;
}

.justify-content(@a) {
  -webkit-justify-content: @a;
  -moz-justify-content: @a;
  justify-content: @a;
}


.linkify(@linkColor) {
  color: @linkColor;
  text-decoration: none;

  &:hover {
    color: @linkColor;
    text-decoration: underline;
    cursor: pointer;
  }
}

.colorGray(@val) {
  color: rgb(@val, @val, @val);
}

.remove-bootstrap-defaults() {
  background-image: none !important;
  text-shadow: none !important;
  box-shadow: none !important;
  border: none !important;
}


.flexbox {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

.flex(@a) {
  -webkit-box-flex: @a;
  -moz-box-flex: @a;
  -webkit-flex: @a;
  -moz-flex: @a;
  -ms-flex: @a;
  flex: @a;
}

.flow(@a) {
  -webkit-flex-flow: @a;
  -moz-flex-flow: @a;
  -ms-flex-flow: @a;
  flex-flow: @a;
}

.lineH(@size, @multiple) {
  line-height: @size*@multiple;
}

.shadow(@arguments) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}

.radius(@radius) {
  -webkit-border-radius: @radius;
  -moz-border-radius:    @radius;
  border-radius:         @radius;

  border-top-right-radius: @radius;
  border-top-left-radius: @radius;
  border-bottom-right-radius: @radius;
  border-bottom-left-radius: @radius;
  -webkit-border-top-right-radius: @radius;
  -webkit-border-top-left-radius: @radius;
  -webkit-border-bottom-right-radius: @radius;
  -webkit-border-bottom-left-radius: @radius;
  -moz-border-top-right-radius: @radius;
  -moz-border-top-left-radius: @radius;
  -moz-border-bottom-right-radius: @radius;
  -moz-border-bottom-left-radius: @radius;
}

.photoBg(@url, @bg-color) {
  background-image: @url;
  background-color:  @bg-color;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

.resetButton {
  outline: 0;
  border: 0;
  padding: 0;
  margin: 0;
  background-color: transparent;
}

.colorOverlay(@color) {
  position: relative;
  &:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: @color;
  }
}

.transitionProperty(@property: all, @duration:0.2s, @ease:ease) {
  -webkit-transition: @property @duration @ease;
  -moz-transition: @property @duration @ease;
  transition: @property @duration @ease;
}

// Transformations
.transform(@transformation) {
  -webkit-transform: @transformation;
  -ms-transform: @transformation; // IE9+
  transform: @transformation;
}

//FROM BOOTSTRAP
.vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f, @bgC: rgba(0,0,0,0.25)) {
  background-color: @bgC;
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
  background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
  background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
  background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
  background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
  background-repeat: no-repeat;
}

.tightText(@size) {
  font-size: @size;
  line-height: @size;
}

.blur-contents(@size, 2px) {
  .transition(0.05s) !important;
  filter: blur(@size);
  -webkit-transform: translate3d(0, 0, 0);
  -webkit-filter: blur(@size);
  -moz-filter: blur(@size);
  filter: url('/media/blur.svg#blur'); /* for Firefox */
}

.ellipsis-overflow {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/*---------------------------------------------------
    LESS Elements 0.9
  ---------------------------------------------------
    A set of useful LESS mixins
    More info at: http://lesselements.com
  ---------------------------------------------------*/

.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
  background: @color;
  background: -webkit-gradient(linear,
  left bottom,
  left top,
  color-stop(0, @start),
  color-stop(1, @stop));
  background: -ms-linear-gradient(bottom,
  @start,
  @stop);
  background: -moz-linear-gradient(center bottom,
  @start 0%,
  @stop 100%);
  background: -o-linear-gradient(@stop,
  @start);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}
.bw-gradient(@color: #F5F5F5, @start: 0, @stop: 255) {
  background: @color;
  background: -webkit-gradient(linear,
  left bottom,
  left top,
  color-stop(0, rgb(@start,@start,@start)),
  color-stop(1, rgb(@stop,@stop,@stop)));
  background: -ms-linear-gradient(bottom,
  rgb(@start,@start,@start) 0%,
  rgb(@stop,@stop,@stop) 100%);
  background: -moz-linear-gradient(center bottom,
  rgb(@start,@start,@start) 0%,
  rgb(@stop,@stop,@stop) 100%);
  background: -o-linear-gradient(rgb(@stop,@stop,@stop),
  rgb(@start,@start,@start));
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",rgb(@stop,@stop,@stop),rgb(@start,@start,@start)));
}
.bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
  border-top: solid 1px @top-color;
  border-left: solid 1px @left-color;
  border-right: solid 1px @right-color;
  border-bottom: solid 1px @bottom-color;
}
.drop-shadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
  -webkit-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}
.rounded(@radius: 2px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}
.border-radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;
  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;
  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  .background-clip(padding-box);
}
.opacity(@opacity: 0.5) {
  -moz-opacity: @opacity;
  -khtml-opacity: @opacity;
  -webkit-opacity: @opacity;
  opacity: @opacity;
  @opperc: @opacity * 100;
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  filter: ~"alpha(opacity=@{opperc})";
}
.transition-duration(@duration: 0.2s) {
  -moz-transition-duration: @duration;
  -webkit-transition-duration: @duration;
  -o-transition-duration: @duration;
  transition-duration: @duration;
}
.transform(...) {
  -webkit-transform: @arguments;
  -moz-transform: @arguments;
  -o-transform: @arguments;
  -ms-transform: @arguments;
  transform: @arguments;
}
.rotation(@deg:5deg){
  .transform(rotate(@deg));
}
.scale(@ratio:1.5){
  .transform(scale(@ratio));
}
.transition(@duration:0.2s, @ease:ease-out) {
  -webkit-transition: all @duration @ease;
  -moz-transition: all @duration @ease;
  -o-transition: all @duration @ease;
  transition: all @duration @ease;
}
.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4) {
  -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}
.box-shadow(@arguments) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}
.box-sizing(@sizing: border-box) {
  -ms-box-sizing: @sizing;
  -moz-box-sizing: @sizing;
  -webkit-box-sizing: @sizing;
  box-sizing: @sizing;
}
.user-select(@argument: none) {
  -webkit-user-select: @argument;
  -moz-user-select: @argument;
  -ms-user-select: @argument;
  user-select: @argument;
}
.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
  -moz-column-width: @colwidth;
  -moz-column-count: @colcount;
  -moz-column-gap: @colgap;
  -moz-column-rule-color: @columnRuleColor;
  -moz-column-rule-style: @columnRuleStyle;
  -moz-column-rule-width: @columnRuleWidth;
  -webkit-column-width: @colwidth;
  -webkit-column-count: @colcount;
  -webkit-column-gap: @colgap;
  -webkit-column-rule-color: @columnRuleColor;
  -webkit-column-rule-style: @columnRuleStyle;
  -webkit-column-rule-width: @columnRuleWidth;
  column-width: @colwidth;
  column-count: @colcount;
  column-gap: @colgap;
  column-rule-color: @columnRuleColor;
  column-rule-style: @columnRuleStyle;
  column-rule-width: @columnRuleWidth;
}
.translate(@x:0, @y:0) {
  .transform(translate(@x, @y));
}
.background-clip(@argument: padding-box) {
  -moz-background-clip: @argument;
  -webkit-background-clip: @argument;
  background-clip: @argument;
}



